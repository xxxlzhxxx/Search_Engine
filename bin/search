#!/bin/bash
set -Eeuo pipefail

# Define functions
start_server() {
  # Check if index server is running
  if ! ./bin/index status &> /dev/null; then
    echo "Error: index server is not running"
    echo "Try: ./bin/index start"
    exit 1
  fi

  # Check if search server is already running
  if pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" >/dev/null; then
    echo "Error: search server is already running"
    exit 1
  fi

  # Check if search database exists
  if [[ ! -f "var/search.sqlite3" ]]; then
    echo "Error: can't find search database var/search.sqlite3"
    echo "Try: ./bin/searchdb create"
    exit 1
  fi

  # Start search server
  echo "starting search server ..."
  mkdir -p var/log
  rm -f var/log/search.log
  flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
}

stop_server() {
  # Stop search server
  echo "stopping search server ..."
  pkill -f "flask --app search run --host 0.0.0.0 --port 8000" || true
}

restart_server() {
  stop_server
  start_server
}

status_server() {
  # Check if search server is running
  if pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" >/dev/null; then
    echo "search server running"
  else
    echo "search server stopped"
    exit 1
  fi
}

# Parse command-line arguments
case "$1" in
  start)
    start_server
    ;;
  stop)
    stop_server
    ;;
  restart)
    restart_server
    ;;
  status)
    status_server
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0
