#!/bin/bash
set -Eeuo pipefail

function start {
    # Check if the Index server is already running
    ps -ef | grep "flask --app index run --host 0.0.0.0 --port" | grep -v grep >/dev/null
    if [ $? -eq 0 ]; then
        echo "Error: index server is already running"
        exit 1
    fi
    echo "starting index server..."
    mkdir -p var/log
    rm -f var/log/index.log
    INDEX_PATH="inverted_index_0.txt" flask --app index run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
    INDEX_PATH="inverted_index_1.txt" flask --app index run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
    INDEX_PATH="inverted_index_2.txt" flask --app index run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
}

function stop {
    echo "stopping index server..."
    pkill -f "flask --app index run --host 0.0.0.0 --port 9000" || true
    pkill -f "flask --app index run --host 0.0.0.0 --port 9001" || true
    pkill -f "flask --app index run --host 0.0.0.0 --port 9002" || true
}

function restart {
    stop
    start
}

function status {
    set +o pipefail
    NPROCS=$(pgrep -f "flask --app index run --host 0.0.0.0 --port 900[0-2]" | wc -l)
    set -o pipefail
    if [ "$NPROCS" -eq 3 ]; then
    echo "index server running"
    exit
    elif [ "$NPROCS" -eq 0 ]; then
    echo "index server stopped"
    exit 1
    else
    echo "index server error: found ${NPROCS} processes, expected 3"
    exit 2
    fi
}

function usage {
    echo "Usage: $0 (start|stop|restart|status)"
    exit 1
}

if [ $# -ne 1 ]; then
    usage
fi

case "$1" in
    start)
    start
    ;;
    stop)
    stop
    ;;
    restart)
    restart
    ;;
    status)
    status
    ;;
    *)
    usage
    ;;
esac


